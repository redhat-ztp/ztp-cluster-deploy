- name: Check workers not exist
  shell: "aicli list hosts | grep {{ item }} | wc -l"
  register: host_exist
  environment:
    AI_URL: "{{ ai_url }}"

- name: Enroll a SuperMicro worker
  block:
  - name: Unmount SuperMicro ISO
    uri:
      url: "https://{{ hostvars[item].bmc_address }}/redfish/v1/Managers/1/VM1/CfgCD/Actions/IsoConfig.UnMount"
      user: "{{ hostvars[item].bmc_user }}"
      password: "{{ hostvars[item].bmc_password }}"
      method: POST
      headers:
        content-type: application/json
        Accept: application/json
      body: {}
      body_format: json
      validate_certs: no
      force_basic_auth: yes
      return_content: yes

  - name: Patching Host and Path for Mounting ISO
    uri:
      url: "https://{{ hostvars[item].bmc_address }}/redfish/v1/Managers/1/VM1/CfgCD"
      user: "{{ hostvars[item].bmc_user }}"
      password: "{{ hostvars[item].bmc_password }}"
      method: PATCH
      headers:
        content-type: application/json
        Accept: application/json
      body: "{\"Host\": \"{{ hostvars[item].smb_host }}\", \"Path\": \"\\\\{{ hostvars[item].smb_path}}\\{{ item }}.iso\"}"
      body_format: json
      force_basic_auth: yes
      validate_certs: no
      return_content: yes

  - name: Mount SuperMicro ISO
    uri:
      url: "https://{{ hostvars[item].bmc_address }}/redfish/v1/Managers/1/VM1/CfgCD/Actions/IsoConfig.Mount"
      user: "{{ hostvars[item].bmc_user }}"
      password: "{{ hostvars[item].bmc_password }}"
      method: POST
      headers:
        content-type: application/json
        Accept: application/json
      body: {}
      body_format: json
      validate_certs: no
      force_basic_auth: yes
      return_content: yes

  - name: SuperMicro Power ON
    community.general.redfish_command:
      category: Systems
      command: PowerOn
      baseuri: "{{ hostvars[item].bmc_address }}"
      username: "{{ hostvars[item].bmc_user }}"
      password: "{{ hostvars[item].bmc_password }}"

  - name: Set Boot for the SuperMicro
    uri:
      url: "https://{{ hostvars[item].bmc_address }}/redfish/v1/Systems/1"
      user: "{{ hostvars[item].bmc_user }}"
      password: "{{ hostvars[item].bmc_password }}"
      method: PATCH
      headers:
        content-type: application/json
        Accept: application/json
      body: '{"Boot":{"BootSourceOverrideEnabled":"Once","BootSourceOverrideTarget":"UsbCd"}}'
      body_format: json
      force_basic_auth: yes
      validate_certs: no
      return_content: yes

  - name: Restart the SuperMicro
    uri:
      url: "https://{{ hostvars[item].bmc_address }}/redfish/v1/Systems/1/Actions/ComputerSystem.Reset"
      user: "{{ hostvars[item].bmc_user }}"
      password: "{{ hostvars[item].bmc_password }}"
      method: POST
      headers:
        content-type: application/json
        Accept: application/json
      body: '{"ResetType": "ForceRestart"}'
      body_format: json
      force_basic_auth: yes
      validate_certs: no
      return_content: yes
  when: hostvars[item].bmc_type == "SuperMicro" and (host_exist.stdout|int == 0 or hostvars[item].redeploy|bool == true)

- name: Add Dell remote worker
  block:
  - name: template racadm
    template:
      src: templates/racadm.sh
      dest: /root/racadm.sh
      owner: root
      mode: 700

  - name: run racadm
    shell: "/root/racadm.sh {{ hostvars[item].bmc_user }} {{ hostvars[item].bmc_password }} {{ hostvars[item].bmc_address }} {{ item }}.iso"
  when: hostvars[item].bmc_type == "Dell" and (host_exist.stdout|int == 0 or hostvars[item].redeploy|bool == true)
