[all:vars]

# The pull_secret from https://cloud.redhat.com/openshift/install/crc/installer-provisioned
pull_secret='xxx'

# ssh key of the installer machine
ssh_public_key="ssh-rsa xxx"

# Default as httpd config
http_server_path=/var/www/html
kernel_arguments=""
ramdisk_path=/opt/network-config
small_iso_path=/opt/cached_disconnected_images/small_iso.iso
final_iso_path=/opt/cached_disconnected_images/coreos.iso
ai_iso_path=/opt/cached_disconnected_images
ignition_config_name=ignition_config
ramdisk_config_name=extra_ramdisk

# You can set your own rootfs image and store it under the same IP as above.
rootfs_url=https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/4.6/latest/rhcos-live-rootfs.x86_64.img

# should be same as the installer machine IP-address
ai_url="http://192.168.112.199:8080"
ignition_url=http://192.168.112.199/ignition_config

# You will need to configure your env DNS server for the cluster_domain and cluster_name
cluster_name="test-aut"
cluster_domain="cluster.testing"

# Make sure api_vip is mapped in your env DNS server to api.{cluster_name}.{cluster_domain} AND ingress_vip to *.apps.{cluster_name}.{cluster_domain}
ingress_vip=192.168.112.195
api_vip=192.168.112.196

# bmc_type based on your HW it should be one of the following values [Dell, SuperMicro].
# You can add more bmc_type however you will need to add the bmc implementation at add-remote-worker role.
bmc_type=Dell
bmc_address=192.168.111.212
bmc_user="ADMIN"
bmc_password="ADMIN"

# Only use smb config with SuperMicro as it does not support HTTP server for ISO images hosts
smb_host=192.168.111.1
smb_path=share
smb_server_path=/path/to/samba/share # only if virtualmedia uses smb mounts
bridge_name=nm-bridge
libvirt_uri="qemu:///system"

[provisioner]
# host from where the installation is performed
localhost ansible_connection=local

# You can ignore this part if you have dhcp configured in your env.
[master_vms]
192.168.112.26
192.168.112.27
192.168.112.28
