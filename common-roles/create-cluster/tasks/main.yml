---
- name: Create a temporary file
  tempfile:
    state: file
  register: tempfile_pullsecret

- name: Copy pull secret to file
  copy:
    content: "{{ pull_secret }}"
    dest: "{{ tempfile_pullsecret.path }}"

- name: Create cluster
  block:
    - name: Create new AI cluster
      shell: "aicli create cluster -P pull_secret={{ tempfile_pullsecret.path }} -P base_dns_domain={{ cluster_domain }} -P ssh_public_key='{{ ssh_public_key }}' -P openshift_version='{{ cluster_version }}' {{ extra_args }} {{ cluster_name_var }}"
      retries: 30
      delay: 5
      register: result
      until: result.rc == 0

    - name: Retrieve cluster ID from name
      shell: "aicli list cluster | grep {{ cluster_name_var }} | cut -d '|' -f3 | tr -d ' '"
      register: cluster_id

    - name: Set the right network type
      uri:
        url: "{{ ai_url }}/api/assisted-install/v1/clusters/{{ cluster_id.stdout }}/install-config"
        method: PATCH
        body: '"{\"networking\": {\"networkType\": \"{{ cluster_sdn | default("OVNKubernetes") }}\"}}"'
        body_format: json
        status_code: 201

    - name: Patch machine_network_cidr
      uri: 
        url: "{{ ai_url }}/api/assisted-install/v1/clusters/{{ cluster_id.stdout }}"
        method: PATCH
        body_format: json
        body: "{{ lookup('template', 'patch-machine-nw-cidr.json.j2') | to_json }}"
        status_code: 201
  environment:
    AI_URL: "{{ ai_url }}"

- name: Disable disconnected install when use_mirror not defined
  set_fact:
    disconnected: False
    debug: False
  when: use_mirror is not defined
      
- block:
  - set_fact:
      disconnected: "{{ use_mirror }}"
      debug: False
      ASSISTED_INSTALLER_BASE_URL: "{{ ai_url }}/api/assisted-install/v1"
  - set_fact:
      URL_ASSISTED_INSTALLER_CLUSTERS: "{{ ASSISTED_INSTALLER_BASE_URL }}/clusters"
  when: use_mirror is defined      

- block:
    - name: Load patch for search registries
      set_fact:
        search_registries: "{{ lookup('template', 'patch-search-registries.j2') }}"
      when: disconnected | bool == True

    - debug:
        var: search_registries
      when: debug and disconnected  | bool == True

    - name: Load patch for discovery ignition
      set_fact:
        patch_discovery_ignition: "{{ lookup('template', 'patch-discovery-ignition.j2') }}"
      when: disconnected | bool == True

    - debug:
        var: patch_discovery_ignition
      when: debug and disconnected  | bool == True

    - name: Patch discovery ignition
      uri:
        url: "{{ URL_ASSISTED_INSTALLER_CLUSTERS }}/{{ cluster_id.stdout }}/discovery-ignition"
        method: PATCH
        status_code: [201]
        return_content: True
        body_format: json
        body: { "config": "{{ patch_discovery_ignition | to_json(ensure_ascii=False) | string }}" }
      when: disconnected | bool == True
      register: http_reply

    - debug:
        var: http_reply
      when: debug and disconnected  | bool == True

    - name: Get discovery ignition file
      uri:
        url: "{{ URL_ASSISTED_INSTALLER_CLUSTERS }}/{{ cluster_id.stdout }}/discovery-ignition"
        method: GET
        status_code: [200]
        return_content: True
      register: discovery_ignition

    - debug:
        var: discovery_ignition.json
      when: debug | bool == True

    - name: "Copy discovery_ignition.json"
      copy:
        content: "{{ discovery_ignition.json }}"
        dest: discovery-ignition.txt
      delegate_to: localhost
      become: no

      #### patch cluster install config on restricted network environments ###

    - name: Get install-config file
      uri:
        url: "{{ URL_ASSISTED_INSTALLER_CLUSTERS }}/{{ cluster_id.stdout }}/install-config"
        method: GET
        status_code: [200]
        return_content: True
      register: install_config

    - debug:
        var: install_config.json
      when: debug | bool == True

    - name: "Copy install_config"
      copy:
        content: "{{ install_config.json }}"
        dest: install-config.txt
      delegate_to: localhost
      become: no

    #TODO: the mirror certificate needs padding (4 spaces) at the begining of each line
    - name: Load patch for install config
      set_fact:
        patch_install_config: "{{ lookup('template', 'patch-install-config.j2') | from_yaml | to_json(ensure_ascii=False) | string }}"
      when: disconnected | bool == True

    - debug:
        var: patch_install_config
      when: debug and disconnected  | bool == True

    - name: Patch install config
      uri:
        url: "{{ URL_ASSISTED_INSTALLER_CLUSTERS }}/{{ cluster_id.stdout }}/install-config"
        method: PATCH
        status_code: [201]
        return_content: True
        body_format: json
        body: "{{ patch_install_config | to_json(ensure_ascii=False) | string }}"
      when: disconnected | bool == True
      register: http_reply

    - debug:
        var: http_reply
      when: debug and disconnected  | bool == True

    - name: Get install-config file
      uri:
        url: "{{ URL_ASSISTED_INSTALLER_CLUSTERS }}/{{ cluster_id.stdout }}/install-config"
        method: GET
        status_code: [200]
        return_content: True
      register: install_config

    - debug:
        var: install_config.json
      when: debug | bool == True

    - name: "Copy install_config-json to patched-config.txt"
      copy:
        content: "{{ install_config.json }}"
        dest: patched-config.txt
      delegate_to: localhost
      become: no
  when: disconnected
