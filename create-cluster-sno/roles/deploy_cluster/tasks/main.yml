---
- name: Create temporary path
  ansible.builtin.tempfile:
    state: directory
  register: temp_directory

- name: Check for custom manifests
  find:
    path: "{{ manifests_path }}"
  register: manifest_files
  when: manifests_path is defined and manifests_path|length>0

- name: Apply custom manifests for this cluster
  template:
    src: "extra_install_manifests.yaml.j2"
    dest: "{{ temp_directory.path }}/extra-manifests.yaml"
  register: cluster_extra_manifests
  when: manifests_path is defined and manifest_files.matched|int != 0

- name: Parse templates to temporary path
  template:
    src: "{{ item }}.j2"
    dest: "{{ temp_directory.path }}/{{ item }}"
  with_items:
  - namespace.yaml
  - agent_cluster_install.yaml
  - cluster_deployment.yaml
  - managed_cluster.yaml
  - klusterlet_addon_config.yaml
  - infra_env.yaml
  - baremetal_host.yaml

- name: Parse nmstate template into temporary path
  template:
    src: "{{ nmstate_path }}"
    dest: "{{ temp_directory.path }}/nmstate.yaml"
  when: nmstate_path is defined

- name: Apply namespace
  ansible.builtin.shell:
    cmd: oc apply -f {{ temp_directory.path }}/namespace.yaml
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"

- name: Copy pull secret to namespace
  ansible.builtin.shell:
    cmd: "oc get secret assisted-deployment-pull-secret --namespace=open-cluster-management -o yaml | sed 's/namespace: .*/namespace: {{ cluster_name }}/' | oc apply -f - "
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"

- name: Apply nmstate if exists
  ansible.builtin.shell:
    cmd: oc apply -f {{ temp_directory.path }}/nmstate.yaml
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  when: nmstate_path is defined


- name: Apply extra manifests if defined
  ansible.builtin.shell:
    cmd: oc apply -f {{ temp_directory.path }}/extra-manifests.yaml
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  when: manifests_path is defined and manifest_files.matched|int != 0

- name: Apply the cluster deployment and infraenv
  ansible.builtin.shell:
    cmd: oc apply -f {{ temp_directory.path }}/{{ item }}
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  with_items:
  - cluster_deployment.yaml
  - klusterlet_addon_config.yaml
  - managed_cluster.yaml
  - agent_cluster_install.yaml
  - infra_env.yaml
  - baremetal_host.yaml
