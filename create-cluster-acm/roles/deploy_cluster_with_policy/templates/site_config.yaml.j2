---
apiVersion: ran.openshift.io/v1
kind: SiteConfig
metadata:
  name: "{{ cluster_name }}"
  namespace: "{{ cluster_name }}"
spec:
  baseDomain: "{{ cluster_domain }}"
  pullSecretRef:
    name: "assisted-deployment-pull-secret"
  clusterImageSetNameRef: "openshift-v{{ release_image_version.split("-")[:-1]|join("-") }}"
  sshPublicKey: "{{ ssh_pubkey }}"
  clusters:
  - clusterName: "{{ cluster_name }}"
    clusterType: "{{ cluster_type }}"
    clusterProfile: "{{ cluster_profile }}"
    numMasters: {% if cluster_type == "standard" %}3
{% else %}1
{% endif %}
{% if cluster_type == "standard" %}
{% if vms|length > 3 %}
    numWorkers: {{ vms|length - 3 }}
{% endif %}
{% else %}
{% if vms|length > 1 %}
    numWorkers: {{ vms|length - 1 }}
{% endif %}
{% endif %}
    clusterLabels:
      common: true
      sites : "{{ cluster_name }}"
    clusterNetwork:
      - cidr: {{ cluster_network_cidr }}/{{ cluster_network_suffix }}
        hostPrefix: {{ cluster_network_prefix }}
    serviceNetwork:
      - {{ service_network_cidr }}/{{ service_network_suffix }}
    {% if cluster_type == "sno" %}machineNetwork:
      - cidr: {{ machine_network_cidr }}/{{ machine_network_suffix }}
    {% endif %}
additionalNTPSources:
{% for item in ntp_sources %}
      - {{ item }}
{% endfor %}
{% if ignition_config_override is defined and ignition_config_override|length > 0 %}
    ignitionConfigOverride: "{{ ignition_config_override }}"
{% endif %}
    nodes:
{% for key, vm in vms.items() %}
      - hostName: "{{ key }}.{{ cluster_name }}.{{ cluster_domain }}"
        role: "{{ vm.role | default('master') }}"
        bmcAddress: "redfish-virtualmedia+http://{{ bmc_endpoint }}/{{ vm_ids[key] }}"
        bmcCredentialsName:
          name: "{{ cluster_name }}-{{ key }}-bmh-secret"
        bootMACAddress: "{{ vm.mac }}"
        bootMode: "UEFI"
{% if vm.root_device_hints is defined and vm.root_device_hints|length > 0 %}        rootDeviceHints:
          {{ vm.root_device_hints|indent(width=8) }}
{% endif %}
{% if vm.cpuset is defined and vm.cpuset|length > 0 %}        cpuset: "{{ vm.cpuset }}"
{% endif %}
        nodeNetwork:
          interfaces:
          - name: eno1
            macAddress: "{{ vm.mac }}"
            config:
{% if vm.nmstate_config_path is defined and vm.nmstate_config_path|length > 0 %}
{% filter indent(width=12, first=True) %}
{% include vm.nmstate_config_path %}
{% endfilter %}

{% else %}
            interfaces:
            - name: eno1
              macAddress: "{{ vm.mac }}"
              type: ethernet
               state: up
               ipv6:
                 enabled: true
                 dhcp: true
                 auto-dns: true
                 auto-gateway: true
                 auto-routes: true
                 autoconf: false
               ipv4:
                 enabled: false
{% endif %}
{% endfor %}

{% if add_extra_workers is defined and add_extra_workers|bool == True %}
{% for key, vm in worker_vms.items() %}
      - hostName: "{{ key }}.{{ cluster_name }}.{{ cluster_domain }}"
        role: worker
        bmcAddress: "redfish-virtualmedia+http://{{ bmc_endpoint }}/{{ vm_ids[key] }}"
        bmcCredentialsName:
          name: "{{ cluster_name }}-{{ key }}-bmh-secret"
        bootMACAddress: "{{ vm.mac }}"
        bootMode: "UEFI"
{% if vm.root_device_hints is defined and vm.root_device_hints|length > 0 %}        rootDeviceHints:
          {{ vm.root_device_hints|indent(width=8) }}
{% endif %}
{% if vm.cpuset is defined and vm.cpuset|length > 0 %}        cpuset: "{{ vm.cpuset }}"
{% endif %}
        nodeNetwork:
          interfaces:
          - name: "{{ vm.interface }}"
            macAddress: "{{ vm.mac }}"
          config:
{% if vm.nmstate_config_path is defined and vm.nmstate_config_path|length > 0 %}
{% filter indent(width=12, first=True) %}
{% include vm.nmstate_config_path %}
{% endfilter %}

{% else %}
            interfaces:
            - name: eno1
              macAddress: "{{ vm.mac }}"
              type: ethernet
               state: up
               ipv6:
                 enabled: true
                 dhcp: true
                 auto-dns: true
                 auto-gateway: true
                 auto-routes: true
                 autoconf: false
               ipv4:
                 enabled: false
{% endif %}
{% endfor %}
{% endif %}

