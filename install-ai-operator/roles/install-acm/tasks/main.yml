- name: Create temporary directory
  tempfile:
    state: directory
  register: temporary_directory

- name: Copy local kubeconfig to remote server if set
  ansible.builtin.copy:
    src: "{{ provisioner_cluster_kubeconfig }}"
    dest: "{{ temporary_directory.path }}/kubeconfig"

- name: Copy pull secret
  ansible.builtin.copy:
    content: "{{ pull_secret }}"
    dest: "{{ temporary_directory.path }}/pull_secret"

- name: Retrieve the registries.conf from one of the masters
  ansible.builtin.shell:
    cmd: oc get nodes -o jsonpath='{ $.items[*].status.addresses[?(@.type=="InternalIP")].address }'
  register: master_ips
  environment:
    KUBECONFIG: "{{ temporary_directory.path }}/kubeconfig"

- name: Modify the registries.conf file and restart services
  ansible.builtin.shell:
    cmd: |
      ssh core@{{ item }} "sudo  sed -i 's#mirror-by-digest-only = true#mirror-by-digest-only = false#g' /etc/containers/registries.conf && sudo systemctl restart crio && sudo systemctl restart kubelet"
  with_items: "{{ master_ips.stdout.split(' ') }}"
  ignore_errors: true

- name: Clone the ACM project
  ansible.builtin.git:
    repo: https://github.com/open-cluster-management/deploy
    dest: "{{ temporary_directory.path }}/acm"

- name: Create version file
  ansible.builtin.shell:
    cmd: "echo '{{ acm_snapshot }}' > {{ temporary_directory.path }}/acm/snapshot.ver"

- name: Copy template to temporary path
  template:
    src: "templates/pull-secret.yaml.j2"
    dest: "{{ temporary_directory.path }}/acm/prereqs/pull-secret.yaml"

- name: Execute with the right parameters
  ansible.builtin.shell:
    cmd: "{{ temporary_directory.path }}/acm/start.sh --silent"
    chdir: "{{ temporary_directory.path }}/acm"
  environment:
    CUSTOM_REGISTRY_REPO: "{% if provisioner_cluster_registry is defined and provisioner_cluster_registry|length > 0 %}{{ provisioner_cluster_registry }}/rhacm2{% endif %}"
    COMPOSITE_BUNDLE: "true"
    QUAY_TOKEN: "{{ quay_token }}"
    KUBECONFIG: "{{ temporary_directory.path }}/kubeconfig"
    DEBUG: true
